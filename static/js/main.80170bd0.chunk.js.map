{"version":3,"sources":["components/new-task-form.js","components/task.js","components/new-task-list.js","components/tasks-filter.js","components/footer.js","index.js"],"names":["NewTaskForm","state","label","onLabelChange","event","setState","target","value","onSubmit","preventDefault","props","AddItem","className","this","onChange","placeholder","autoFocus","required","Component","defaultProps","Task","newText","handleInputChange","handleKeyDown","successEdit","id","key","onDeleted","isEditing","completed","toggleStateOfTask","onEdited","currentStatus","type","onClick","onKeyDown","ref","input","focus","NewTaskList","todos","el","map","item","TasksFilter","deleteCompleted","handleToggleFilter","name","Footer","completedCount","ToDoApp","maxId","toDoData","createItem","toggleProperty","addNewItem","text","newItem","deleteItem","filter","newArr","console","log","arr","propName","index","findIndex","oldEl","newEl","slice","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80170bd0.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class NewTaskForm extends Component {\n\tstatic defaultProps = {\n\n\t}\n\tstate = {\n\t\tlabel: ''\n\t}\n\n\tonLabelChange = (event) => {\n\t\tthis.setState({\n\t\t\tlabel: event.target.value\n\t\t})\n\t}\n\n\tonSubmit = (event) => {\n\t\tevent.preventDefault()\n\t\tthis.props.AddItem(this.state.label)\n\t\tthis.setState({\n\t\t\tlabel: ''\n\t\t})\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<form className='form-input'\n\t\t\t\tonSubmit={this.onSubmit}>\n\t\t\t\t<input\n\t\t\t\t\tclassName='new-todo'\n\t\t\t\t\tonChange={this.onLabelChange}\n\t\t\t\t\tplaceholder='What needs to be done?'\n\t\t\t\t\tautoFocus\n\t\t\t\t\tvalue={this.state.label}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<button className='btn btn-outline-secondary'>\n\t\t\t\t\tAdd Item\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\n\nexport default class Task extends Component {\n\n\n\tstate = {\n\t\tnewText: this.props.label,\n\t}\n\n\thandleInputChange = (event) => {\n\t\tconst { value } = event.target\n\t\tthis.setState({\n\t\t\tnewText: value,\n\t\t});\n\t};\n\n\thandleKeyDown = (event) => {\n\t\tconst { newText } = this.state;\n\t\tconst { successEdit, id } = this.props;\n\t\tif (event.key === 'Enter') {\n\t\t\tsuccessEdit(newText, id)\n\t\t}\n\t}\n\n\trender() {\n\n\t\tlet { newText } = this.state;\n\t\tconst { label, onDeleted, isEditing, completed, toggleStateOfTask, onEdited, currentStatus } = this.props;\n\n\t\tlet className = !completed ? '' : 'completed';\n\t\tclassName += `${currentStatus === 'active' && completed ? ' hidden' : ''}`\n\t\tclassName += `${currentStatus === 'completed' && !completed ? ' hidden' : ''}`\n\t\tclassName += `${isEditing ? ' editing' : ''}`\n\n\t\tlet view = 'view';\n\n\t\treturn (\n\t\t\t<li className={className}>\n\t\t\t\t<div className={view}>\n\t\t\t\t\t<input className=\"toggle\" type=\"checkbox\" onClick={toggleStateOfTask} />\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<span className='description'>{label}</span>\n\t\t\t\t\t\t<span className=\"created\">created 5 minutes ago</span>\n\t\t\t\t\t</label>\n\t\t\t\t\t<button className=\"icon icon-edit\" onClick={onEdited}></button>\n\t\t\t\t\t<button className=\"icon icon-destroy\" onClick={onDeleted}></button>\n\t\t\t\t</div>\n\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"edit\"\n\t\t\t\t\tvalue={newText}\n\t\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\tref={input => input && input.focus()}\n\t\t\t\t/>\n\t\t\t</li>\n\t\t)\n\t}\n}\n\n","import React from 'react';\nimport Task from './task';\n\nconst NewTaskList = ({ todos, currentStatus, successEdit, onDeleted, toggleStateOfTask, onEdited, isEditing }) => {\n\tconst el = todos.map((item) => (\n\t\t<Task\n\t\t\tkey={item.id}\n\t\t\t{...item}\n\t\t\tonEdited={() => onEdited(item.id)}\n\t\t\tonDeleted={() => onDeleted(item.id)}\n\t\t\tcurrentStatus={currentStatus}\n\t\t\tsuccessEdit={successEdit}\n\t\t\ttoggleStateOfTask={() => toggleStateOfTask(item.id)} />\n\t))\n\treturn (\n\t\t<ul className='todo-list'>\n\t\t\t{el}\n\t\t</ul>\n\t)\n}\n\nNewTaskList.defaultProps = {\n\ttodos: [],\n\tcurrentStatus: 'all',\n\tonDeleted: () => { },\n\ttoggleStateOfTask: () => { }\n}\n\nexport default NewTaskList;","import React, { Component } from 'react';\n\nexport default class TasksFilter extends Component {\n\n\tstatic defaultProps = {\n\t\tcurrentStatus: 'all',\n\t\tdeleteCompleted: () => { },\n\t\thandleToggleFilter: () => { }\n\t}\n\n\trender() {\n\t\tconst { deleteCompleted, currentStatus, handleToggleFilter } = this.props\n\n\t\treturn (\n\t\t\t<ul className=\"filters\">\n\t\t\t\t<li>\n\t\t\t\t\t<button\n\t\t\t\t\t\tname='all'\n\t\t\t\t\t\tclassName={currentStatus === 'all' ? 'selected' : ''}\n\t\t\t\t\t\tonClick={(event) => handleToggleFilter(event.target.name)} >\n\t\t\t\t\t\tAll\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<button\n\t\t\t\t\t\tname='active'\n\t\t\t\t\t\tclassName={currentStatus === 'active' ? 'selected' : ''}\n\t\t\t\t\t\tonClick={(event) => handleToggleFilter(event.target.name)} >\n\t\t\t\t\t\tActive\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<button\n\t\t\t\t\t\tname='completed'\n\t\t\t\t\t\tclassName={currentStatus === 'completed' ? 'selected' : ''}\n\t\t\t\t\t\tonClick={(event) => handleToggleFilter(event.target.name)} >\n\t\t\t\t\t\tCompleted\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={deleteCompleted} >\n\t\t\t\t\t\tClear completed\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t)\n\t}\n}\n\n","import React, { Component } from 'react';\nimport TasksFilter from './tasks-filter'\n\nexport default class Footer extends Component {\n\tstatic defaultProps = {\n\t\tcompletedCount: 0,\n\t\tdeleteCompleted: () => { },\n\t\ttodos: [],\n\t\thandleToggleFilter: () => { },\n\t\tcurrentStatus: 'all'\n\t}\n\trender() {\n\t\tconst { completedCount, deleteCompleted, todos, handleToggleFilter, currentStatus } = this.props\n\n\t\treturn (\n\t\t\t<footer className='footer'>\n\t\t\t\t<span className=\"todo-count\">{completedCount} items left</span>\n\t\t\t\t<TasksFilter\n\t\t\t\t\t{...todos}\n\t\t\t\t\thandleToggleFilter={handleToggleFilter}\n\t\t\t\t\tcurrentStatus={currentStatus}\n\t\t\t\t\tdeleteCompleted={deleteCompleted}\n\t\t\t\t/>\n\t\t\t</footer>\n\t\t)\n\t}\n}\n\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport NewTaskForm from './components/new-task-form';\nimport NewTaskList from './components/new-task-list';\nimport Footer from './components/footer';\n\nexport default class ToDoApp extends Component {\n\n\tmaxId = 1;\n\n\tstate = {\n\t\ttoDoData: [\n\t\t\tthis.createItem('Completed task'),\n\t\t\tthis.createItem('Editing task'),\n\t\t\tthis.createItem('Active task')\n\t\t],\n\t\tcurrentStatus: 'all'\n\t};\n\n\ttoggleProperty(arr, id, propName) {\n\t\tconst index = arr.findIndex((el) => el.id === id);\n\n\t\tconst oldEl = arr[index];\n\t\tconst newEl = { ...oldEl, [propName]: !oldEl[propName] }\n\n\t\treturn [\n\t\t\t...arr.slice(0, index),\n\t\t\tnewEl,\n\t\t\t...arr.slice(index + 1)\n\t\t]\n\t}\n\n\tcreateItem(label) {\n\t\treturn ({\n\t\t\tlabel,\n\t\t\tcompleted: false,\n\t\t\tid: this.maxId++,\n\t\t\tisEditing: false\n\t\t})\n\t}\n\n\tonEdited = (id) => {\n\t\tthis.setState(({ toDoData }) => {\n\t\t\treturn { toDoData: this.toggleProperty(toDoData, id, 'isEditing') }\n\t\t})\n\t}\n\n\taddNewItem = (text) => {\n\t\tthis.setState(({ toDoData }) => {\n\n\t\t\tconst newItem = this.createItem(text)\n\t\t\tconst newArr = [...toDoData, newItem]\n\n\t\t\treturn {\n\t\t\t\ttoDoData: newArr\n\t\t\t}\n\n\t\t})\n\t}\n\n\ttoggleStateOfTask = (id) => {\n\t\tthis.setState(({ toDoData }) => {\n\t\t\treturn {\n\t\t\t\ttoDoData: this.toggleProperty(toDoData, id, 'completed')\n\t\t\t};\n\t\t})\n\t}\n\n\tdeleteItem = (id) => {\n\t\tthis.setState(({ toDoData }) => {\n\t\t\tconst newArr = toDoData.filter((el) => el.id !== id)\n\n\t\t\treturn {\n\t\t\t\ttoDoData: newArr\n\t\t\t}\n\t\t})\n\t}\n\n\tdeleteCompleted = () => {\n\t\tthis.setState(({ toDoData }) => {\n\t\t\tconst newArr = toDoData.filter((el) => el.completed !== true)\n\t\t\tconsole.log(newArr)\n\t\t\treturn {\n\t\t\t\ttoDoData: newArr\n\t\t\t}\n\t\t})\n\t}\n\n\thandleToggleFilter = (name) => {\n\t\tthis.setState({\n\t\t\tcurrentStatus: name,\n\t\t})\n\t}\n\tsuccessEdit = (text, id) => {\n\t\tthis.setState(({ toDoData }) => {\n\t\t\tconst newState = toDoData.map((el) => {\n\t\t\t\tif (id === el.id) {\n\t\t\t\t\tel.label = text;\n\t\t\t\t\tel.isEditing = !el.isEditing;\n\t\t\t\t}\n\t\t\t\treturn el;\n\t\t\t})\n\n\t\t\treturn {\n\t\t\t\ttoDoData: newState\n\t\t\t}\n\t\t})\n\t}\n\trender() {\n\t\tconsole.log(this.state)\n\t\tconst { currentStatus, toDoData } = this.state\n\n\t\tconst completedCount = toDoData.filter((el) => el.completed === false).length\n\n\t\treturn (\n\t\t\t<section className='todoapp' >\n\t\t\t\t<header>\n\t\t\t\t\t<h1>todos</h1>\n\t\t\t\t\t<NewTaskForm AddItem={this.addNewItem} />\n\t\t\t\t</header>\n\t\t\t\t<section className='main'>\n\t\t\t\t\t<NewTaskList\n\t\t\t\t\t\ttodos={toDoData}\n\t\t\t\t\t\tcurrentStatus={currentStatus}\n\t\t\t\t\t\tonEdited={this.onEdited}\n\t\t\t\t\t\tonDeleted={this.deleteItem}\n\t\t\t\t\t\ttoggleStateOfTask={this.toggleStateOfTask}\n\t\t\t\t\t\tsuccessEdit={this.successEdit} />\n\t\t\t\t\t<Footer\n\t\t\t\t\t\tcompletedCount={completedCount}\n\t\t\t\t\t\tcurrentStatus={currentStatus}\n\t\t\t\t\t\ttodos={toDoData}\n\t\t\t\t\t\tdeleteCompleted={this.deleteCompleted}\n\t\t\t\t\t\thandleToggleFilter={this.handleToggleFilter}\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\t\t\t</section>\n\t\t);\n\t}\n}\nReactDOM.render(<ToDoApp />, document.getElementById('root'))\n"],"sourceRoot":""}